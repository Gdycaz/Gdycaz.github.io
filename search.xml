<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C语言基础-基础结构</title>
      <link href="/2022/05/23/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80-%E5%9F%BA%E7%A1%80%E7%BB%93%E6%9E%84/"/>
      <url>/2022/05/23/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80-%E5%9F%BA%E7%A1%80%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="基本结构"><a href="#基本结构" class="headerlink" title="基本结构"></a>基本结构</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">imclude&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(viod)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    x=<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d\n&quot;</span>, &amp;x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;你好 %d\n&quot;</span>,x);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯嵌入式笔记</title>
      <link href="/2022/05/09/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/05/09/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="编译问题"><a href="#编译问题" class="headerlink" title="编译问题"></a>编译问题</h1><ol><li><p>必须勾选以下：<br><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220509191333090.png"></p></li><li><p>通道说明可以在 stm32f10x.h 文件中找</p></li><li><p>定时器初始化要先放到串口初始化前。</p></li></ol><h1 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h1><p>include &lt;stdio.h&gt;</p><p>include “stm32f10x.h”</p><h1 id="特别注意的地方"><a href="#特别注意的地方" class="headerlink" title="特别注意的地方"></a>特别注意的地方</h1><h2 id="PB3、PB4需要额外注意，默认不为GPIO功能"><a href="#PB3、PB4需要额外注意，默认不为GPIO功能" class="headerlink" title="PB3、PB4需要额外注意，默认不为GPIO功能"></a>PB3、PB4需要额外注意，默认不为GPIO功能</h2><h2 id="ADC每次开启软件转换后，读取ADC值前，加5ms的延时。同时ADC值获取放到液晶刷新函数中"><a href="#ADC每次开启软件转换后，读取ADC值前，加5ms的延时。同时ADC值获取放到液晶刷新函数中" class="headerlink" title="ADC每次开启软件转换后，读取ADC值前，加5ms的延时。同时ADC值获取放到液晶刷新函数中"></a>ADC每次开启软件转换后，读取ADC值前，加5ms的延时。同时ADC值获取放到液晶刷新函数中</h2><h2 id="EEPROM每次读写间隔，加5ms延时"><a href="#EEPROM每次读写间隔，加5ms延时" class="headerlink" title="EEPROM每次读写间隔，加5ms延时"></a>EEPROM每次读写间隔，加5ms延时</h2><h1 id="LED"><a href="#LED" class="headerlink" title="LED"></a>LED</h1><ol><li><p>LED：<br>GOIOC_Pin_8 ~ 15，低电平点亮</p></li><li><p>LED锁存器<br>GPIOD_pin_2</p></li><li><p>修改【LCD_DisplayStringLine()函数，行字符串显示】。将GPIOC -&gt;ODR分别互换保存一次<br><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220509191437401.png"><br><strong>不需要每次再，重新关灯</strong></p></li><li><p>例程</p></li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">GPIO_WriteBit(GPIOC, GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_11 | GPIO_Pin_12| GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15, Bit_SET);</span><br><span class="line">    GPIO_WriteBit(GPIOD, GPIO_Pin_2, Bit_SET);            <span class="comment">//状态锁存</span></span><br><span class="line">    GPIO_WriteBit(GPIOD, GPIO_Pin_2, Bit_RESET);</span><br></pre></td></tr></table></figure><blockquote><p>自定义LED灯</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513215809697.png"></p><h1 id="Key"><a href="#Key" class="headerlink" title="Key"></a>Key</h1><p>(B1 ~ B4) GPIOA_Pin_0; GPIOA_Pin_8; GPIOB_Pin_1 ;GPIOB_Pin_2<br>按键默认有上拉电阻，检测低电平</p><p><strong>使用外部中断作为按键触发</strong></p><blockquote><p>判断按键时间长短</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513214326871.png"></p><h1 id="BEEF蜂鸣器"><a href="#BEEF蜂鸣器" class="headerlink" title="BEEF蜂鸣器"></a>BEEF蜂鸣器</h1><p>PB4:有源蜂鸣器<strong>PB3、PB4需要额外注意</strong><br>PB4默认做JNTRST功能，开启GPIO输出功能需要启用PB4的AFIO端口复用功能。以及关闭JTRST功能</p><blockquote><p>低电平叫</p></blockquote><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB | RCC_APB2Periph_AFIO, ENABLE);</span><br><span class="line">GPIO_PinRemapConfig(GPIO_Remap_SWJ_NoJTRST,ENABLE);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513213742602.png"></p><h1 id="LCD"><a href="#LCD" class="headerlink" title="LCD"></a>LCD</h1><h2 id="基本显示"><a href="#基本显示" class="headerlink" title="基本显示"></a>基本显示</h2><p><strong>液晶显示必须要有刷新限制，清0时间大于液晶刷新时间</strong></p><p><strong>清屏操作禁止使用，改为清行操作</strong></p><p>液晶显示只能是字符型<br><img src="C:\Users\Gdycaz\AppData\Roaming\Typora\typora-user-images\image-20220509191505856.png"></p><p>数字 + ‘0’：数字转为数字字符<br>数字字符 - ‘0’：数字字符转为数字</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="built_in">string</span>[<span class="number">100</span>];</span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">LCD_SetTextColor(Red);</span><br><span class="line"><span class="built_in">sprintf</span>((<span class="type">char</span> *)<span class="built_in">string</span>, <span class="string">&quot;     %d&quot;</span>, a);</span><br><span class="line">LCD_DisplayStringLine(Line2, <span class="built_in">string</span>);</span><br><span class="line"></span><br><span class="line">LCD_SetTextColor(Red);</span><br><span class="line">LCD_DisplayChar(<span class="number">219</span>,<span class="number">320</span>,a + <span class="string">&#x27;0&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="液晶显示背景高亮"><a href="#液晶显示背景高亮" class="headerlink" title="液晶显示背景高亮"></a>液晶显示背景高亮</h2><blockquote><p>同时液晶刷新必须有周期限制。同时注意液晶有显示需要时间，将置0时间延长。</p></blockquote><ol><li><p>修改【LCD_DisplayStringLine()函数，行字符串显示】。增加行字符串参数，加个列坐标；<br>refcolumn:显示初始列坐标<br><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220509191359387.png"></p></li><li><p>修改【LCD_ClearLine()函数，清除一列】。增加LCD_DisplayStringLine()的第三个参数为0<br><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220509191418505.png"></p></li></ol><p>例程：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">LCD_DisplayStringLine(Line2, (u8 *)<span class="string">&quot;00&quot;</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">LCD_SetBackColor(Green);</span><br><span class="line">LCD_DisplayStringLine(Line2, (u8 *)<span class="string">&quot;00&quot;</span>, <span class="number">2</span>);</span><br><span class="line">LCD_SetBackColor(White);</span><br><span class="line"></span><br><span class="line">LCD_DisplayStringLine(Line3, (u8 *)<span class="string">&quot;11&quot;</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure><h1 id="Usart"><a href="#Usart" class="headerlink" title="Usart"></a>Usart</h1><h2 id="Usart2"><a href="#Usart2" class="headerlink" title="Usart2"></a>Usart2</h2><p>【DMA_Interrupt】【Polling】</p><p>TX:PA2; RX:PA3<br>波特率: 9600</p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513184304587.png"></p><p><strong>接收中断中，活用static定义</strong><br>发送用 fputc</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">fputc</span> <span class="params">(<span class="type">int</span> c, FILE *fp)</span> <span class="comment">//把printf所调用的fputc重新编写，使用printf时系统优先调我们写的fputc。</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">while</span>( USART_GetFlagStatus(USART2, USART_FLAG_TXE) != SET);   <span class="comment">//确保发送区缓冲区不为空</span></span><br><span class="line">  USART_SendData(USART2, c);</span><br><span class="line">  <span class="keyword">while</span>( USART_GetFlagStatus(USART2, USART_FLAG_TC) != SET);   <span class="comment">//等待发送完成</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接收用中断 USART2_IRQHandler，可自定义接收格式</p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513184342084.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513184440128.png"></p><h1 id="EXTI外部中断"><a href="#EXTI外部中断" class="headerlink" title="EXTI外部中断"></a>EXTI外部中断</h1><p>分为 </p><ul><li>  EXTI0;EXTI1;EXTI2;EXTI3;EXTI4</li><li>  EXTI9_5</li><li>  EXTI15_10;</li></ul><p>要开启AFIO端口复用</p><p>优先级编写时，以及中断函数：采用以下模式</p><ul><li>EXTI0;EXTI1;EXTI2;EXTI3;EXTI4</li><li>EXTI9_5</li><li>EXTI15_10;</li></ul><h1 id="Systick"><a href="#Systick" class="headerlink" title="Systick"></a>Systick</h1><p>初次启用Systick的计时功能，<strong>不稳定</strong>。第一次不要，需要在初始化将while前，将计数值初始化为0。</p><h1 id="TIM"><a href="#TIM" class="headerlink" title="TIM"></a>TIM</h1><p>高级定时器：TIM1<br>通用定时器：TIM2、TIM3、TIM4</p><h2 id="定时器中断"><a href="#定时器中断" class="headerlink" title="定时器中断"></a>定时器中断</h2><p>【TimeBase】</p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513184535186.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513184605479.png"></p><h2 id="PWM输出比较"><a href="#PWM输出比较" class="headerlink" title="PWM输出比较"></a>PWM输出比较</h2><p>【TIM10_PWMOutput】</p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513184640294.png"></p><h2 id="PWM两路PWM输出，频率、占空比可调"><a href="#PWM两路PWM输出，频率、占空比可调" class="headerlink" title="PWM两路PWM输出，频率、占空比可调"></a>PWM两路PWM输出，频率、占空比可调</h2><p>【OCToggle】</p><blockquote><p>配置直接粘贴复制，中断中需要加上产生占空比</p></blockquote><ol><li><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513184720994.png"></li></ol><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513184746522.png"></p><ol start="2"><li><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513192816497.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513192827299.png"></p></li></ol><h2 id="PWM输入捕获"><a href="#PWM输入捕获" class="headerlink" title="PWM输入捕获"></a>PWM输入捕获</h2><p>【InputCapture】<br><strong>TIM_OC2PolarityConfig(TIM3, TIM_ICPolarity_Falling);</strong> ：修改输入捕获中断标志。 此代码可在tim.h中找到。</p><blockquote><p>配置直接粘贴复制， 中断中占空比检测需要自己添加</p></blockquote><ol><li><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513185232419.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513185325553.png"></p></li><li><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513185432386.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513185450572.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513185506707.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513185527499.png"></p></li></ol><h1 id="ADC"><a href="#ADC" class="headerlink" title="ADC"></a>ADC</h1><p>【ADC1_DMA】</p><p>我们的板子只有ADC1</p><p><strong>ADC_GetConversionValue(ADC1);</strong> :获取ADC值，代码可以在adc.h中找到<br>ADC_Value =  ADC_GetConversionValue(ADC1)*3.30/0xfff;（获取电压）<br>0xfff ： 为12位ADC精度值</p><p>获取精度值函数，需放到与液晶刷新相同时间程序内。</p><blockquote><p>ADC直接粘贴复制修改， 每次开启ADC软件触发后要加5ms的延时</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513185551956.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513185616664.png"></p><h1 id="RTC"><a href="#RTC" class="headerlink" title="RTC"></a>RTC</h1><p>【LSI_Calib】 <strong>无中断</strong><br>板载没有LSE（外部低速晶振）:32.768Khz<br>启用LSI（内部低速晶振）大约40Khz（30kHZ~60kHZ)</p><p>RTC_GetCounter(); RTC_SetCounter();<br>直接主函数中，循环读取RTC值，满足86400（24小时）后，将计数值清零。</p><p>tm.hour = time / 3600;<br>tm.minute = (time % 3600) / 60;<br>tm.second = ((time % 3600) % 60);</p><blockquote><p>RTC直接粘贴修改（删去最后两行）加上初始值。满足86400（24小时）后，将计数值清零，即重置时间。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513185831161.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220513185946344.png"></p><h1 id="IIC-EEPROM"><a href="#IIC-EEPROM" class="headerlink" title="IIC_EEPROM"></a>IIC_EEPROM</h1><blockquote><p>每次读取要加5ms延时</p></blockquote><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//写</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">AT24C02_Write</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> addr, <span class="type">unsigned</span> <span class="type">int</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line">    I2CStart();</span><br><span class="line">    </span><br><span class="line">    I2CSendByte(<span class="number">0xA0</span>);</span><br><span class="line">    <span class="keyword">while</span>(I2CWaitAck() == FAILURE);</span><br><span class="line">    </span><br><span class="line">    I2CSendByte(addr);</span><br><span class="line">    <span class="keyword">while</span>(I2CWaitAck() == FAILURE);</span><br><span class="line">    </span><br><span class="line">    I2CSendByte(data);</span><br><span class="line">    <span class="keyword">while</span>(I2CWaitAck() == FAILURE);</span><br><span class="line">    </span><br><span class="line">    I2CStop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">AT24C02_Read</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> addr)</span><span class="comment">//先发，再收</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> data;</span><br><span class="line">    </span><br><span class="line">    I2CStart();</span><br><span class="line">    </span><br><span class="line">    I2CSendByte(<span class="number">0xA0</span>);    <span class="comment">//发送读取地址</span></span><br><span class="line">    <span class="keyword">while</span>(I2CWaitAck() == FAILURE);</span><br><span class="line">    I2CSendByte(addr);</span><br><span class="line">    <span class="keyword">while</span>(I2CWaitAck() == FAILURE);</span><br><span class="line">    </span><br><span class="line">    I2CStart();        <span class="comment">//接收</span></span><br><span class="line">    I2CSendByte(<span class="number">0xA1</span>);</span><br><span class="line">    <span class="keyword">while</span>(I2CWaitAck() == FAILURE);</span><br><span class="line">    data = I2CReceiveByte();</span><br><span class="line">    </span><br><span class="line">    I2CStop();</span><br><span class="line">    </span><br><span class="line">    I2CSendNotAck();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="发送单字节流程："><a href="#发送单字节流程：" class="headerlink" title="发送单字节流程："></a>发送单字节流程：</h2><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220509191920543.png"></p><ol><li>启动IIC。<code>IIC_Start();</code></li><li>发送设备地址,并且等待应答。<code>IIC_Send_Byte(0xA0); while(I2CWaitAck() == FAILURE);</code></li><li>发送访问EEPROM内的地址，并且等待应答。<code>I2CSendByte(addr); while(I2CWaitAck() == FAILURE);</code></li><li>发送数据，并且等待应答。<code>I2CSendByte(data); hile(I2CWaitAck() == FAILURE);</code></li><li>停止IIC。<code>I2CStop();</code></li></ol><h2 id="接收单字节"><a href="#接收单字节" class="headerlink" title="接收单字节"></a>接收单字节</h2><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220509191938777.png"></p><ol><li><p>启动IIC，模式为发送模式。<code>I2CStart();</code></p></li><li><p>发送设备地址,并且等待应答。<code>IIC_Send_Byte(0xA0); while(I2CWaitAck() == FAILURE);</code></p></li><li><p>发送访问EEPROM内的地址，并且等待应答。<code>I2CSendByte(addr); while(I2CWaitAck() == FAILURE);</code></p></li><li><p>启动IIC，转换模式为接收模式。<code>I2CStart();</code></p></li><li><p>发送设备地址,并且等待应答。<code>IIC_Send_Byte(0xA1); while(I2CWaitAck() == FAILURE);</code></p></li><li><p>接收数据。<code>data = I2CReceiveByte();</code></p></li><li><p>不接收应答。<code>I2CSendNotAck();</code></p></li><li><p>停止IIC。<code>I2CStop();</code></p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 蓝桥杯嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IIc学习笔记</title>
      <link href="/2022/05/09/IIc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/05/09/IIc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="IIC-EEPROM"><a href="#IIC-EEPROM" class="headerlink" title="IIC_EEPROM"></a>IIC_EEPROM</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//写</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">AT24C02_Write</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> addr, <span class="type">unsigned</span> <span class="type">int</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line">I2CStart();</span><br><span class="line"></span><br><span class="line">I2CSendByte(<span class="number">0xA0</span>);</span><br><span class="line"><span class="keyword">while</span>(I2CWaitAck() == FAILURE);</span><br><span class="line"></span><br><span class="line">I2CSendByte(addr);</span><br><span class="line"><span class="keyword">while</span>(I2CWaitAck() == FAILURE);</span><br><span class="line"></span><br><span class="line">I2CSendByte(data);</span><br><span class="line"><span class="keyword">while</span>(I2CWaitAck() == FAILURE);</span><br><span class="line"></span><br><span class="line">I2CStop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">AT24C02_Read</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> addr)</span><span class="comment">//先发，再收</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> data;</span><br><span class="line"></span><br><span class="line">I2CStart();</span><br><span class="line"></span><br><span class="line">I2CSendByte(<span class="number">0xA0</span>);<span class="comment">//发送读取地址</span></span><br><span class="line"><span class="keyword">while</span>(I2CWaitAck() == FAILURE);</span><br><span class="line">I2CSendByte(addr);</span><br><span class="line"><span class="keyword">while</span>(I2CWaitAck() == FAILURE);</span><br><span class="line"></span><br><span class="line">I2CStart();<span class="comment">//接收</span></span><br><span class="line">I2CSendByte(<span class="number">0xA1</span>);</span><br><span class="line"><span class="keyword">while</span>(I2CWaitAck() == FAILURE);</span><br><span class="line">data = I2CReceiveByte();</span><br><span class="line"></span><br><span class="line">I2CStop();</span><br><span class="line"></span><br><span class="line">I2CSendNotAck();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="发送单字节流程："><a href="#发送单字节流程：" class="headerlink" title="发送单字节流程："></a>发送单字节流程：</h2><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220509172712469.png" alt="发送流程图"></p><ol><li>启动IIC。<code>IIC_Start();</code></li><li>发送设备地址,并且等待应答。<code>IIC_Send_Byte(0xA0); while(I2CWaitAck() == FAILURE);</code></li><li>发送访问EEPROM内的地址，并且等待应答。<code>I2CSendByte(addr); while(I2CWaitAck() == FAILURE);</code></li><li>发送数据，并且等待应答。<code>I2CSendByte(data); hile(I2CWaitAck() == FAILURE);</code></li><li>停止IIC。<code>I2CStop();</code></li></ol><h2 id="接收单字节"><a href="#接收单字节" class="headerlink" title="接收单字节"></a>接收单字节</h2><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220509172745749.png" alt="接收流程图"></p><ol><li><p>启动IIC，模式为发送模式。<code>I2CStart();</code></p></li><li><p>发送设备地址,并且等待应答。<code>IIC_Send_Byte(0xA0); while(I2CWaitAck() == FAILURE);</code></p></li><li><p>发送访问EEPROM内的地址，并且等待应答。<code>I2CSendByte(addr); while(I2CWaitAck() == FAILURE);</code></p></li><li><p>启动IIC，转换模式为接收模式。<code>I2CStart();</code></p></li><li><p>发送设备地址,并且等待应答。<code>IIC_Send_Byte(0xA1); while(I2CWaitAck() == FAILURE);</code></p></li><li><p>接收数据。<code>data = I2CReceiveByte();</code></p></li><li><p>不要接收应答。<code>I2CSendNotAck();</code></p></li><li><p>停止IIC。<code>I2CStop();</code></p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> STM32 </tag>
            
            <tag> IIC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宽带网络实验</title>
      <link href="/2022/05/09/%E5%AE%BD%E5%B8%A6%E7%BD%91%E7%BB%9C%E5%AE%9E%E9%AA%8C/"/>
      <url>/2022/05/09/%E5%AE%BD%E5%B8%A6%E7%BD%91%E7%BB%9C%E5%AE%9E%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="路由器配置"><a href="#路由器配置" class="headerlink" title="路由器配置"></a>路由器配置</h2><p><code>en</code> 进入特权模式</p><p><code>conf t</code>进入端口配置</p><p><code>intface fa0/0</code>进入相应端口配置</p><p><code>ip route 192.168.1.0 255.255.255.0</code>路由配置</p><p><code>no ip route 192.168.1.0 255.255.255.0</code>取消路由配置</p><p><code>show ip route</code>显示路由器的路径</p><p><code>wr</code>保存路由器配置</p>]]></content>
      
      
      
        <tags>
            
            <tag> 宽带网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TIM定时器外部输入配置</title>
      <link href="/2022/05/06/TIM%E5%AE%9A%E6%97%B6%E5%99%A8%E5%A4%96%E9%83%A8%E8%BE%93%E5%85%A5%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/05/06/TIM%E5%AE%9A%E6%97%B6%E5%99%A8%E5%A4%96%E9%83%A8%E8%BE%93%E5%85%A5%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="定时器外部时钟"><a href="#定时器外部时钟" class="headerlink" title="定时器外部时钟"></a>定时器外部时钟</h1><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220506202553256.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220506214630206.png"></p><h1 id="外部时钟模式1"><a href="#外部时钟模式1" class="headerlink" title="外部时钟模式1"></a>外部时钟模式1</h1><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220506215117906.png" alt="外部时钟模式1"></p><blockquote><p>可配置外部接口为TIM的CH1和CH2</p></blockquote><p>配置函数：</p><p><code>TIM_ETRClockMode1Config(TIM2, TIM_ExtTRGPSC_OFF , TIM_ExtTRGPolarity_NonInverted, 0xf);</code>设置为外部时钟模式1<br><code>TIM_TIxExternalClockConfig(TIM2,TIM_TIxExternalCLK1Source_TI2,TIM_ICPolarity_Rising,0x00);    </code>设置定时器触发引脚，边沿检测</p><p><code>TIM_ETRClockMode1Config(TIM2, TIM_ExtTRGPSC_OFF , TIM_ExtTRGPolarity_NonInverted, 0x00);</code></p><ol><li><p>TIM_ExtTRGPSC_OFF ：设置预分频系数</p></li><li><p>TIM_ExtTRGPolarity_NonInverted：设置边沿检测（高电平有效）</p><p>TIM_ExtTRGPolarity_Inverted：低电平有效</p></li><li><p>0x00：外部触发滤波（不滤波）</p></li></ol><p><code>TIM_TIxExternalClockConfig(TIM2,TIM_TIxExternalCLK1Source_TI2,TIM_ICPolarity_Rising,0x00);</code></p><ol><li><p>TIM_TIxExternalCLK1Source_TI1：定时器通道1</p><p>TIM_TIxExternalCLK1Source_TI2：定时器通道2</p></li><li><p>TIM_ICPolarity_Rising：设置捕获边沿（上升沿有效）</p><p>TIM_ICPolarity_Rising：下升沿有效</p></li><li><p>0x00：输入比较滤波（不滤波）</p></li></ol><h1 id="外部时钟模式2"><a href="#外部时钟模式2" class="headerlink" title="外部时钟模式2"></a>外部时钟模式2</h1><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220506221648869.png" alt="外部时钟模式2"></p><blockquote><p>可配置TIM的外部接口为ETR接口</p></blockquote><p>配置函数：</p><p><code>TIM_ETRClockMode2Config(TIM2,TIM_ExtTRGPSC_OFF,TIM_ExtTRGPolarity_NonInverted,0x00);</code></p><ol><li><p>TIM_ExtTRGPSC_OFF ：设置预分频系数</p></li><li><p>TIM_ExtTRGPolarity_NonInverted：设置边沿检测（高电平有效）</p><p>TIM_ExtTRGPolarity_Inverted：低电平有效</p></li><li><p>0x00：外部触发滤波（不滤波）</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> STM32 </tag>
            
            <tag> TIM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嵌入式命令</title>
      <link href="/2022/05/02/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/05/02/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h1><p><code>ifconfig</code>查看网卡</p><p><code>pwd</code>列出当前目录下的路径</p><p><code>cat + “文件名”</code>查看文件</p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> STM32MP157 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>器件记录</title>
      <link href="/2022/04/29/%E5%99%A8%E4%BB%B6%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/04/29/%E5%99%A8%E4%BB%B6%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="二极管记录"><a href="#二极管记录" class="headerlink" title="二极管记录"></a>二极管记录</h1><h2 id="SMBJ瞬变抑制二极管"><a href="#SMBJ瞬变抑制二极管" class="headerlink" title="SMBJ瞬变抑制二极管"></a>SMBJ瞬变抑制二极管</h2><h3 id="单双向之分"><a href="#单双向之分" class="headerlink" title="单双向之分"></a>单双向之分</h3><p>SMBJ-A：单向</p><p>SMBJ-CA：双向。</p><h3 id="极性之分和外观标志"><a href="#极性之分和外观标志" class="headerlink" title="极性之分和外观标志"></a>极性之分和外观标志</h3><p>SMBJ-A：  有极性。有细色环端，接的是正极。</p><p>SMBJ-CA：没极性。标志中间有两道环，或者没有任何标志。</p><h3 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h3><p>用于浪涌与静电保护应用</p><h3 id="选型"><a href="#选型" class="headerlink" title="选型"></a>选型</h3><p>VRWM ≥1.1 UM</p><p>直流：UM = 直流电源</p><p>交流：UM=1.414Uac,如，对于220V的交流电，其UM=1.414*220=311（V）</p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429175925816.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429175945026.png"></p><p>例子：智能车驱动电路中，12V电路因电机产生的反向电压，有可能产生24V电压，所以UM = 1.1*24 = 26.4.</p><p>SMBJ28A的VRWM = 28 &gt;UM ,所以选择SMBJ28A。</p>]]></content>
      
      
      <categories>
          
          <category> 电子硬件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电子硬件 </tag>
            
            <tag> 电子器件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo—Butterfly主题使用技巧</title>
      <link href="/2022/04/29/Hexo%E2%80%94Butterfly%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/04/29/Hexo%E2%80%94Butterfly%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h1><h2 id="安装nodejs："><a href="#安装nodejs：" class="headerlink" title="安装nodejs："></a>安装nodejs：</h2><blockquote><p>下载地址： <a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429105633781.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429105659445.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429105715059.png"></p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><blockquote><p>下载地址：<a href="https://git-scm.com/">https://git-scm.com/</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429105934022.png"></p><p>接下来一直点击next即可</p><h2 id="验证是否安装"><a href="#验证是否安装" class="headerlink" title="验证是否安装"></a>验证是否安装</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure><p>分别输出版本号即为安装成功</p><h2 id="安装cnpm"><a href="#安装cnpm" class="headerlink" title="安装cnpm"></a>安装cnpm</h2><p>执行：<code>$ npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p><p>检验是否安装：<code>cnpm -v</code>,输出版本号即为安装成功</p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p><code>$ cnpm install hexo-cli -g</code></p><h2 id="初始化博客"><a href="#初始化博客" class="headerlink" title="初始化博客"></a>初始化博客</h2><p>执行：<code>hexo Init + [文件名]</code></p><p>在初始化遇到<code>Install dependencies</code>时，<code>ctrl + c</code>结束命令</p><p>进入<strong>博客根目录</strong>执行<code>$ cnpm install</code>,完成初始化</p><h1 id="部署博客"><a href="#部署博客" class="headerlink" title="部署博客"></a>部署博客</h1><h2 id="部署博客到github"><a href="#部署博客到github" class="headerlink" title="部署博客到github"></a>部署博客到github</h2><blockquote><p>参考：<a href="https://www.cnblogs.com/huanhao/p/hexobase.html#github%E9%83%A8%E7%BD%B2">https://www.cnblogs.com/huanhao/p/hexobase.html#github%E9%83%A8%E7%BD%B2</a></p></blockquote><ol><li><p>创建github仓库</p><p><strong>仓库名必须是用户名 + .github.io</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429112334988.png"></p><ol start="2"><li><p>生成gitH密钥</p><p>执行<code>$ ssh-keygen -t rsa -C “gdycaz@gdycaz.com“</code>后，一直点击回车</p><p>然后执行<code>cat ~/.ssh/id_rsa.pub</code>,输出密钥。</p><p>复制密钥，然后点击头像，点击Settings – SSH and GPG keys – New SSH Key</p><p>在key处复制密钥</p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429113039315.png"></p><ol start="3"><li><p>执行<code>$  ssh -T git@github.com</code></p></li><li><p>复制博客项目的SHH链接</p><p>在<strong>站点配置文件</strong>中，修改deploy信息</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: 你复制的SHH地址</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure></li><li><p>安装上传插件 <code>cnpm install hexo-deployer-git --save</code></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;Gdyaz&quot;</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;Gdycaz@163.com&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>然后可以上传了<code>hexo g -d</code></p></li><li><p>在项目settings中，Pages中</p><p>勾选mian，得到自己的博客网站</p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429113747645.png"></p></li></ol></li></ol><h1 id="博客基本操作"><a href="#博客基本操作" class="headerlink" title="博客基本操作"></a>博客基本操作</h1></li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ hexo s<span class="comment">//博客本地预览</span></span><br><span class="line">$ heox clean<span class="comment">//清除博客本地缓存</span></span><br><span class="line">$ hexo g<span class="comment">//博客生成本地文件</span></span><br><span class="line">$ hexo d<span class="comment">//将博客部署到github</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于AD—PCB规则设置</title>
      <link href="/2022/04/29/%E5%85%B3%E4%BA%8EAD%E2%80%94PCB%E8%A7%84%E5%88%99%E8%AE%BE%E7%BD%AE/"/>
      <url>/2022/04/29/%E5%85%B3%E4%BA%8EAD%E2%80%94PCB%E8%A7%84%E5%88%99%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="嘉立创PCB规则"><a href="#嘉立创PCB规则" class="headerlink" title="嘉立创PCB规则"></a>嘉立创PCB规则</h1><h2 id="孔径要求"><a href="#孔径要求" class="headerlink" title="孔径要求"></a>孔径要求</h2><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429103722536.png"></p><h3 id="过控"><a href="#过控" class="headerlink" title="过控"></a>过控</h3><p>单双层板最小过控：内径0.3mm/外径0.5mm<br>四六层板最小过控：内径0.2mm/外径0.45mm</p><h3 id="插件孔"><a href="#插件孔" class="headerlink" title="插件孔"></a>插件孔</h3><p>最小孔为0.5mm</p><h2 id="线路制作"><a href="#线路制作" class="headerlink" title="线路制作"></a>线路制作</h2><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429103812498.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429103829995.png"></p><h3 id="走线"><a href="#走线" class="headerlink" title="走线"></a>走线</h3><p>最小6mil</p><h3 id="线隙"><a href="#线隙" class="headerlink" title="线隙"></a>线隙</h3><p>单双层板最小线宽线隙：0.127mm<br>四六层板最小线宽线隙：0.09mm<br>最小焊盘边距离线边: 0.127mm</p><h3 id="过控-1"><a href="#过控-1" class="headerlink" title="过控"></a>过控</h3><p>内层过孔边到线路铜面/导线间隙0.3mm以上</p><h2 id="阻焊制作"><a href="#阻焊制作" class="headerlink" title="阻焊制作"></a>阻焊制作</h2><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429103859339.png"></p><h2 id="字符制作"><a href="#字符制作" class="headerlink" title="字符制作"></a>字符制作</h2><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429103920716.png"></p><p><img src="C:\Users\Gdycaz\AppData\Roaming\Typora\typora-user-images\image-20220429103950183.png"></p><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p>丝印字符：线宽不能小于0.15mm，高度不能小于1mm。<br>镂空字体：线宽不能小于0.2mm，高度不能小于1.5mm。</p><h3 id="字符间距"><a href="#字符间距" class="headerlink" title="字符间距"></a>字符间距</h3><p>字符距离焊盘需不小于0.15mm，字符间隙大于0.15mm。</p><h1 id="AD20-PCB规则"><a href="#AD20-PCB规则" class="headerlink" title="AD20 PCB规则"></a>AD20 PCB规则</h1><h2 id="线路"><a href="#线路" class="headerlink" title="线路"></a>线路</h2><h3 id="走线间距"><a href="#走线间距" class="headerlink" title="走线间距"></a>走线间距</h3><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429104005749.png"></p><h3 id="不允许短路"><a href="#不允许短路" class="headerlink" title="不允许短路"></a>不允许短路</h3><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429104019830.png"></p><h3 id="线宽"><a href="#线宽" class="headerlink" title="线宽"></a>线宽</h3><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429104036500.png"></p><h3 id="拓扑器件连接关系"><a href="#拓扑器件连接关系" class="headerlink" title="拓扑器件连接关系"></a>拓扑器件连接关系</h3><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429104047423.png" alt="最短连接"><br>【最短连接】</p><h2 id="孔"><a href="#孔" class="headerlink" title="孔"></a>孔</h2><h3 id="过孔"><a href="#过孔" class="headerlink" title="过孔"></a>过孔</h3><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429104107155.png"></p><h3 id="打孔"><a href="#打孔" class="headerlink" title="打孔"></a>打孔</h3><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429104118134.png"></p><h3 id="孔与孔间距"><a href="#孔与孔间距" class="headerlink" title="孔与孔间距"></a>孔与孔间距</h3><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429104209876.png"></p><h2 id="其他间距"><a href="#其他间距" class="headerlink" title="其他间距"></a>其他间距</h2><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429104339969.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429104352626.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/image-20220429104404495.png"></p>]]></content>
      
      
      <categories>
          
          <category> AD </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AD </tag>
            
            <tag> 嘉立创 </tag>
            
            <tag> PCB规则约束 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown使用技巧</title>
      <link href="/2022/04/27/MarkDown%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2022/04/27/MarkDown%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="段落样式"><a href="#段落样式" class="headerlink" title="段落样式"></a>段落样式</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p><code># 一级标题</code></p><p><code>## 二级标题</code></p><p><code>### 三级标题</code></p><span id="more"></span><h2 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a>代码框</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">```一行代码框```</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">```c: 多行代码框</span><br></pre></td></tr></table></figure><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><code>[Gdycaz](http://localhost:4000/2022/03/31/hello-world/)</code></p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><code>![Gdycaz](https://cdn.jsdelivr.net/gh/Gdycaz/picgo/img/3.jpg)</code></p><h1 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h1><p><code>*斜体字体*</code></p><p><code>**字体加粗**</code></p><h1 id="文章样式"><a href="#文章样式" class="headerlink" title="文章样式"></a>文章样式</h1><p><code>&lt;!--more--&gt; :阅读全文</code></p><p><code>&gt;我引用的内容</code></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> main</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">q;</span><br><span class="line">q</span><br><span class="line">    q</span><br><span class="line">    q</span><br><span class="line">    q</span><br><span class="line">    q</span><br><span class="line">    q</span><br><span class="line">    q</span><br><span class="line">    q</span><br><span class="line">    q</span><br><span class="line">    q</span><br><span class="line"></span><br><span class="line">    </span><br></pre></td></tr></table></figure><h2 id="文章标签"><a href="#文章标签" class="headerlink" title="文章标签"></a>文章标签</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">title: MarkDown使用技巧 <span class="comment">//标题</span></span><br><span class="line">date: <span class="number">2022</span><span class="number">-04</span><span class="number">-27</span> <span class="number">20</span>:<span class="number">31</span>:<span class="number">12</span><span class="comment">//时间</span></span><br><span class="line">tags:<span class="comment">//标签</span></span><br><span class="line">  - MarkDown</span><br><span class="line">categories: MarkDown<span class="comment">//分类</span></span><br><span class="line">description: 常用Markdown技巧 <span class="comment">//描述</span></span><br><span class="line">sticky: <span class="number">1</span><span class="comment">//置顶</span></span><br><span class="line">cover: https:<span class="comment">//cdn.jsdelivr.net/gh/Gdycaz/PicGo/img/Typora.jpeg//封面图片</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MarkDown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客部署中遇到的问题</title>
      <link href="/2022/04/27/%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2022/04/27/%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="博客上传后搜索用不了"><a href="#博客上传后搜索用不了" class="headerlink" title="博客上传后搜索用不了"></a>博客上传后搜索用不了</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>在网站按<code>Ctrl + F5</code>清除缓存</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
